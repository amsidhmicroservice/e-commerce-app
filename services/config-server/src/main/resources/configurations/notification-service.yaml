
spring:
  data:
    mongodb:
      uri: mongodb://alibou:alibou@localhost:27017/notificationdb?authSource=admin
  kafka:
    producer:
      bootstrap-servers: host.docker.internal:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: "orderConfirmation:com.amsidh.mvc.dto.OrderConfirmation,paymentConfirmation:com.amsidh.mvc.dto.PaymentNotificationMessage"
    consumer:
      bootstrap-servers: host.docker.internal:9092
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: '*'
        spring.json.type.mapping: "orderConfirmation:com.amsidh.mvc.dto.OrderConfirmation,paymentConfirmation:com.amsidh.mvc.dto.PaymentNotificationMessage"
  mail:
    host: localhost
    port: 1025
    username: alibou
    password: alibou
    properties:
      mail:
        smtp:
          trust: "*"
        auth: true
        starttls:
          enabled: true
        connectiontimeout: 5000
        timeout: 3000
        writetimeout: 5000



notification-service:
  kafka:
    topic:
      order-confirmation: order-topic
      payment-confirmation: payment-topic
    consumer:
      group-id:
        order-confirmation: order-confirmation-group
        payment-confirmation: payment-confirmation-group

